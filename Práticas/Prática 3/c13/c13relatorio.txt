1. Analise do código e detecção de erros:
Há uma série de alocações de memória seguidas sem a correspondente liberação intermediária, resultando
em vazamentos de memória.

3. Correção:
- A segunda alocação de memória (p = (char *) malloc(12);) é comentada, o que significa que essa 
alocação não é mais executada.
- A memória alocada na primeira chamada de malloc é liberada com (free(p);) antes de alocar 
memória novamente na terceira chamada de malloc.

-------------------------------------------------------------------------
-> Retorno do GDB no arquivo defeituoso:
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./c13.out...
(gdb) run
Starting program: /mnt/c/Users/Acer/Documents/2023-02/ED/Prática 3/c13/c13.out
[Inferior 1 (process 465) exited normally]
(gdb) quit

-------------------------------------------------------------------------
-> Retorno do Valgrind no arquivo defeituoso:
$ valgrind --leak-check=full ./c13.out
==475== Memcheck, a memory error detector
==475== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==475== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==475== Command: ./c13.out
==475==
==475==
==475== HEAP SUMMARY:
==475==     in use at exit: 35 bytes in 2 blocks
==475==   total heap usage: 3 allocs, 1 frees, 47 bytes allocated
==475==
==475== 16 bytes in 1 blocks are definitely lost in loss record 1 of 2
==475==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==475==    by 0x1091A6: main (c13.c:11)
==475==
==475== 19 bytes in 1 blocks are definitely lost in loss record 2 of 2
==475==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==475==    by 0x10917E: main (c13.c:8)
==475==
==475== LEAK SUMMARY:
==475==    definitely lost: 35 bytes in 2 blocks
==475==    indirectly lost: 0 bytes in 0 blocks
==475==      possibly lost: 0 bytes in 0 blocks
==475==    still reachable: 0 bytes in 0 blocks
==475==         suppressed: 0 bytes in 0 blocks
==475==
==475== For lists of detected and suppressed errors, rerun with: -s
==475== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

-------------------------------------------------------------------------
-> Retorno do GDB no arquivo corrigido:
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./c13correto.out...
(gdb) run
Starting program: /mnt/c/Users/Acer/Documents/2023-02/ED/Prática 3/c13/c13correto.out
[Inferior 1 (process 471) exited normally]
(gdb) quit

-------------------------------------------------------------------------
-> Retorno do Valgrind no arquivo corrigido:
 valgrind --leak-check=full ./c13correto.out
==476== Memcheck, a memory error detector
==476== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==476== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==476== Command: ./c13correto.out
==476==
==476==
==476== HEAP SUMMARY:
==476==     in use at exit: 0 bytes in 0 blocks
==476==   total heap usage: 2 allocs, 2 frees, 35 bytes allocated
==476==
==476== All heap blocks were freed -- no leaks are possible
==476==
==476== For lists of detected and suppressed errors, rerun with: -s
==476== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)