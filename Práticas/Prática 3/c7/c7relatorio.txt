1. Analise do código e detecção de erros:
O erro reside na alocação de 26 bytes para a variável do tipo char chamada "alphabet", pois esquecemos de alocar 
espaço adicional para o caractere ' \0 ' que é usado para terminar a string. 
Como resultado, a última escrita é feita em um endereço de memória além do bloco de 26 bytes que alocamos.

3. Correção:
Basta fazermos a alocação dinâmica de "alphabet" com 27 elementos ao invés de 26.

-------------------------------------------------------------------------
-> Retorno do GDB no arquivo defeituoso:
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./c7.out...
(gdb) run
Starting program: /mnt/c/Users/Acer/Documents/2023-02/ED/Prática 3/c7/c7.out

[Inferior 1 (process 229) exited normally]
(gdb) quit

-------------------------------------------------------------------------
-> Retorno do Valgrind no arquivo defeituoso:
$ valgrind --leak-check=full ./c7.out
==233== Memcheck, a memory error detector
==233== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==233== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==233== Command: ./c7.out
==233==
==233== Invalid write of size 1
==233==    at 0x1091BC: main (c7.c:10)
==233==  Address 0x4a4705a is 0 bytes after a block of size 26 alloc'd
==233==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==233==    by 0x109183: main (c7.c:5)
==233==
==233==
==233== HEAP SUMMARY:
==233==     in use at exit: 0 bytes in 0 blocks
==233==   total heap usage: 1 allocs, 1 frees, 26 bytes allocated
==233==
==233== All heap blocks were freed -- no leaks are possible
==233==
==233== For lists of detected and suppressed errors, rerun with: -s
==233== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

-------------------------------------------------------------------------
-> Retorno do GDB no arquivo corrigido:
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./c7correto.out...
(gdb) run
Starting program: /mnt/c/Users/Acer/Documents/2023-02/ED/Prática 3/c7/c7correto.out
[Inferior 1 (process 223) exited normally]
(gdb) quit

-------------------------------------------------------------------------
-> Retorno do Valgrind no arquivo corrigido:
$ valgrind --leak-check=full ./c7correto.out
==234== Memcheck, a memory error detector
==234== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==234== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==234== Command: ./c7correto.out
==234==
==234==
==234== HEAP SUMMARY:
==234==     in use at exit: 0 bytes in 0 blocks
==234==   total heap usage: 1 allocs, 1 frees, 26 bytes allocated
==234==
==234== All heap blocks were freed -- no leaks are possible
==234==
==234== For lists of detected and suppressed errors, rerun with: -s
==234== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)